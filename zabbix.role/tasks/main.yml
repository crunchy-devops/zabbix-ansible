---
# tasks file for zabbix.role
- name: update cache
  apt:
    update_cache: yes
  tags:
    - cache
- name: wget latest deb repo package for zabbix
  get_url:
    url: https://repo.zabbix.com/zabbix/6.1/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.1-1+ubuntu20.04_all.deb
    dest: /home/ubuntu/zabbix.deb
  tags:
    - wget
- name: dpkg
  apt:
    deb: /home/ubuntu/zabbix.deb
  tags:
    - dpkg
- name: update cache deb
  apt:
    update_cache: yes
  tags:
    - cache-deb
- name: Install zabbix packages
  apt:
    name: "{{ zabbix_packages }}"
    state: present
  tags:
    - packages
- name: Install docker
  apt:
    name: "{{ docker_packages }}"
    state: present
  tags:
    - docker
- name: Added user to docker group
  shell: usermod -aG docker {{ ansible_user }}exit
- name: Start postgresql
  docker_container:
    name: 'db'
    image: postgres:13.6
    state: 'started'
    env:
      POSTGRES_PASSWORD: 'password'
    ports:
      - "5432:5432"
    volumes:
      - "/opt/postgres:/var/lib/postgresql/data"
  register: db_cont_metadata
  tags:
    - postgres
- name: Get infos on container
  docker_container_info:
    name: 'db'
  register: result
- name: Does container exist?
  debug:
    msg: "The container {{ 'exist' if result.exists else 'does not exist' }}"
- name: IP address
  debug:
    msg: "{{result.container.NetworkSettings.IPAddress}}"
- name: wait for postgres to accept connections
  wait_for:
    host: "{{ result.container.NetworkSettings.IPAddress }}"
    port: 5432
    state: 'drained' # will check for active connection
    connect_timeout: 1
    timeout: 30  # maximum number of seconds to wait for
  register: postgresql_running
  until: postgresql_running is success
  retries: 10
- name: Set up server.sql.gz script in docker container
  shell: docker cp /usr/share/doc/zabbix-sql-scripts/postgresql/server.sql.gz db:/tmp
- name: Add container db to in-memory inventory
  become: true
  add_host:
    name: db
    ansible_connection: docker
  changed_when: false
- name: run command in container db
  become: false
  delegate_to: db
  remote_user: postgres
  raw: psql -l | grep zabbix | wc -l
  register: result
- name: Return value
  debug:
    msg: "{{ result.stdout | trim }}"
- name: Create database
  delegate_to: db
  become: false
  remote_user: postgres
  raw: psql -c 'create database zabbix;'
  when:  result.stdout | trim | int == 0
- name: Create role
  delegate_to: db
  become: false
  remote_user: postgres
  raw: psql -c "CREATE ROLE zabbix WITH LOGIN ENCRYPTED PASSWORD 'zabbix';"
  when:  result.stdout | trim | int == 0
- name: Adduser
  become: false
  delegate_to: db
  raw: useradd -m -p zabbix -s /bin/bash zabbix
  when:  result.stdout | trim | int == 0
- name: load zabbix database
  become: false
  remote_user: zabbix
  delegate_to: db
  raw: zcat /tmp/server.sql.gz | psql zabbix
  when:  result.stdout | trim | int == 0
- name: change zabbix server DBPassword
  replace:
    path: /etc/zabbix/zabbix_server.conf
    regexp: '^# DBPassword='
    replace: 'DBPassword=zabbix'
    backup: yes
  tags:
    - zabbix_replace
- name: Start zabbix-server
  systemd:
    name: zabbix-server
    state: restarted
    enabled: yes
    daemon_reload: yes
  tags:
    - start-zabbix-server
- name: Start zabbix-agent
  systemd:
    name: zabbix-agent
    state: restarted
    enabled: yes
    daemon_reload: yes
  tags:
    - start-zabbix-agent
- name: Start apache server
  systemd:
    name: apache2
    state: restarted
    enabled: yes
    daemon_reload: yes
  tags:
    - start-apache
